#include <Adafruit_NeoPixel.h>  // библиотека светодиодной ленты
#include <GyverButton.h>        // библиотека кнопки

#define PIN 4         // глобально объявляем порт ленты
#define NUMPIXELS 8  // количество пикселей в ленте

GButton KNOP(7, HIGH_PULL, NORM_OPEN);     // объект для кнопки
Adafruit_NeoPixel pixels(NUMPIXELS, PIN);  // объект для ленты

int mode;                                                                    // переменная переключения режима работы ленты
int mas_pix [16] = { 9, 11, 0, 10, 15, 2, 14, 5, 1, 12, 7, 13, 6, 3, 4, 8 }; // массив для "случайного" пересчета (эффект №4)
int time1 = 60;                                                              // задержка эффекта №1
int time2and3 = 55;                                                          // задержка эффекта №2 и №3
int time4 = 70;                                                              // задержка эффекта №4
int time5 = 5;                                                               // задержка эффекта №5
int time6 = 50;                                                              // задержка эффекта №6

unsigned long timing_1;  // переменная отсечта времени эффекта №1
unsigned long timing_2;  // переменная отсечта времени эффекта №2
unsigned long timing_3;  // переменная отсечта времени эффекта №3
unsigned long timing_4;  // переменная отсечта времени эффекта №4
unsigned long timing_5;  // переменная отсечта времени эффекта №5
unsigned long timing_6;  // переменная отсечта времени эффекта №6


void setup() {
  pixels.begin();             // подключаем ленту
  pixels.setBrightness(10);   // устанавливаем яркость
  KNOP.setTickMode(AUTO);     // постоянный опрос кнопки в автоматическом режиме
}

void loop() {
  pixels.clear();        // очищаем всю ленту
  if (KNOP.isClick()) {  // если кнопка нажата
    mode++;              // прибавляем единицу к переменной режима
    while (mode == 1) {  // пока переменная режима равна 1, то эффект №1 "ВСТРЕЧНЫЕ ВСПЫШКИ"
      effect_1();
    }
    while (mode == 2) {  // пока переменная режима равна 2, то эффект №2 "ЛЕДЯНОЙ ОГОНЬ"
      effect_2();
    }
    while (mode == 3) {  // пока переменная режима равна 3, то эффект №3 "КАМИННЫЙ ОГОНЬ"
      effect_3();
    }
    while (mode == 4) {  // пока переменная режима равна 4, то эффект №4 "СЛУЧАЙНОЕ ЗАПОЛНЕНИЕ"
      effect_4();
    }
    while (mode == 5) {  // пока переменная режима равна 5, то эффект №5 "РАДУГА"
      effect_5();
    }
    while (mode == 6) {  // пока переменная режима равна 6, то эффект "АВТОБАН"
      effect_6();
    }
    while (mode == 7) {  // пока переменная режима равна 7, то эффект "ПОПАРНЫЙ ПЕРЕЛИВ"
      effect_7();
    }
    while (mode == 8) {  // пока переменная режима равна 7, то эффект "ЦВЕТОВОЕ КОЛЕСО"
      effect_8();
    }
  }
  pixels.show();
}
void setAll(byte red, byte green, byte blue) {                   // функция настройки всей ленты: принимает значения интенсивности и записывает каждому светодиоду это значение 
  for (int i = 0; i < NUMPIXELS; i++) {                          // пересчитываем светодиоды
    setPixel(i, red, green, blue);                               // подаем номер светодиода и значение интенсивности на функцию настройки каждого светодиода
  }
  pixels.show();
}
void setPixel(int Pixel, byte red, byte green, byte blue) {      // функция настройки каждого светодиода: принимает все данные от функции настройки всей ленты
  pixels.setPixelColor(Pixel, red, green, blue);                 // настраиваем конкретный светодиод заданной интенсивностью
}